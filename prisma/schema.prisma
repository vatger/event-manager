datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int      @id @default(autoincrement())
  cid       Int      @unique
  name      String
  rating    String
  fir       String?
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  signups      EventSignup[]
  Notification Notification[]
}

model Event {
  id              Int         @id @default(autoincrement())
  name            String
  description     String
  bannerUrl       String
  startTime       DateTime
  endTime         DateTime
  airports        Json // Array of ICAO codes
  signupDeadline  DateTime?
  staffedStations Json? // Array of Callsigns
  status          EventStatus @default(PLANNING)
  rosterlink      String?
  createdById     Int?
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt

  signups      EventSignup[]
  Notification Notification[]
}

model EventSignup {
  id                Int      @id @default(autoincrement())
  eventId           Int
  userCID           Int
  availability      Json
  endorsement       String?
  breakrequests     String?
  preferredStations String?
  remarks           String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  event Event @relation(fields: [eventId], references: [id])
  user  User  @relation(fields: [userCID], references: [cid])

  @@unique([eventId, userCID]) // verhindert doppelte Signups
}

enum Role {
  USER
  ADMIN
  MAIN_ADMIN
}

enum EventStatus {
  PLANNING
  SIGNUP_OPEN
  SIGNUP_CLOSED
  ROSTER_PUBLISHED
  DRAFT
  CANCELLED
}

enum DocumentType {
  PLAN
  BRIEFING
  CHART
  OTHER
}

enum NotificationType {
  INFO
  SYSTEM
  EVENT
  OTHER
}

model Notification {
  id        Int              @id @default(autoincrement())
  userCID   Int
  eventId   Int?
  type      NotificationType
  title     String
  message   String
  data      Json?
  readAt    DateTime?
  createdAt DateTime         @default(now())

  user  User   @relation(fields: [userCID], references: [cid])
  event Event? @relation(fields: [eventId], references: [id])

  @@index([userCID, readAt])
  @@index([eventId])
}
